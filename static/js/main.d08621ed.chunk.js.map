{"version":3,"sources":["pages/Blog.js","utils/index.js","theme.js","pages/Home.js","components/GlobalStyles.js","context/ThemeContext.js","hooks/index.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","SubMenu","Menu","MenuItem","Item","MenuItemGroup","ItemGroup","Search","Input","BlogContainer","styled","div","BlogMenu","theme","useTheme","name","mode","className","key","title","href","Blog","justify","align","level","placeholder","onSearch","value","console","log","ratio","style","background","orientation","componentToIcon","component","L","divIcon","html","ReactDOMServer","renderToString","breakpoints","xs","sm","md","lg","xl","xxl","_standardMediaqueries","mapValues","bp","mqs","produce","draft","viewports","keys","forEach","index","length","mq","nextVP","se","mobileLandscape","mediaqueries","base","colors","primary","sizes","navbar","height","light","container","text","dark","Paragraph","HomeWrapper","TextWrapper","HomeContainer","SocialLinks","ul","props","socialLinks","url","icon","mdiGithub","mdiLinkedin","mdiTwitter","mdiInstagram","mdiGmail","Mapa","width","position","path","mdiMapMarker","size","color","isMobileAndLandscape","useMedia","maxWidth","Map","attributionControl","center","doubleClickZoom","dragging","keyboard","scrollWheelZoom","tap","touchZoom","zoom","zoomControl","TileLayer","Marker","Home","useWindowSize","photoId","expand","map","target","GlobalStyles","styles","css","ThemeContext","createContext","setTheme","useDarkModeEnable","useState","state","stateSet","handler","window","matchMedia","matches","useEffect","addEventListener","NavigationWrapper","nav","mapThemeKeyToIcon","mdiAuto","mdiLight","mdiDark","mapThemeKeyToText","ThemeButtonWrapper","button","Navigation","useContext","enabled","isHome","useRouteMatch","exact","top","bottomBoundary","innerZ","c","to","filter","e","themeKey","onClick","getTheme","themes","App","useLocalStorage","themeKeySet","systemTheme","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d08621ed.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"@emotion/styled\";\nimport Typography from 'antd/es/typography';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport Menu from 'antd/es/menu';\nimport Input from 'antd/es/input';\nimport Divider from 'antd/es/divider';\nimport { useTheme } from 'emotion-theming';\nimport AspectRatio from \"react-aspect-ratio\";\n\n\n\nconst { Title } = Typography;\nconst { SubMenu, Item: MenuItem, ItemGroup: MenuItemGroup } = Menu;\nconst { Search } = Input;\n\n\nconst BlogContainer = styled.div`\n  padding: 1rem 1rem 0;\n\n  .nav-menu {\n    text-transform: uppercase;\n  }\n`;\n\nconst BlogMenu = () => {\n  const { name: theme } = useTheme();\n\n  return <Menu mode=\"horizontal\" theme={theme} className=\"nav-menu\">\n    <MenuItem key=\"mail\">\n      Home\n    </MenuItem>\n    <MenuItem key=\"app\">\n      UI/UX Design\n    </MenuItem>\n    <SubMenu title=\"Web Development\">\n      <MenuItemGroup title=\"Item 1\">\n        <MenuItem key=\"setting:1\">Option 1</MenuItem>\n        <MenuItem key=\"setting:2\">Option 2</MenuItem>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <MenuItem key=\"setting:3\">Option 3</MenuItem>\n        <MenuItem key=\"setting:4\">Option 4</MenuItem>\n      </MenuItemGroup>\n    </SubMenu>\n    <MenuItem key=\"t\">\n      <a href=\"#/a\">\n        Typography\n      </a>\n    </MenuItem>\n    <MenuItem key=\"a\">\n      <a href=\"#/b\">\n        Freelancing\n      </a>\n    </MenuItem>\n    <MenuItem key=\"b\">\n      <a href=\"#/c\">\n        Lifestyle\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e1\">\n      <a href=\"#/d\">\n        Extra Item 1\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e2\">\n      <a href=\"#/d\">\n        Extra Item 2\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e3\">\n      <a href=\"#/d\">\n        Extra Item 3\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e4\">\n      <a href=\"#/d\">\n        Extra Item 4\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e01\">\n      <a href=\"#/d\">\n        Extra Item 1\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e02\">\n      <a href=\"#/d\">\n        Extra Item 2\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e03\">\n      <a href=\"#/d\">\n        Extra Item 3\n      </a>\n    </MenuItem>\n    <MenuItem key=\"e04\">\n      <a href=\"#/d\">\n        Extra Item 4\n      </a>\n    </MenuItem>\n  </Menu>;\n};\n\nconst Blog = () => {\n  return (\n    <BlogContainer className=\"container\">\n      <Row justify=\"space-between\" align=\"middle\">\n        <Col>\n          <Title level={1}>xantiagoma | blog</Title>\n        </Col>\n        <Col>\n          <Search placeholder=\"Search...\" onSearch={value => console.log(value)} />\n        </Col>\n      </Row>\n      <BlogMenu />\n      <AspectRatio ratio={1200 / 406} style={{ background: 'red' }}>\n        Header\n      </AspectRatio>\n      <Divider orientation=\"left\">Featured</Divider>\n\n    </BlogContainer>\n  );\n}\n\nexport default Blog;","import L from \"leaflet\";\nimport ReactDOMServer from 'react-dom/server';\n\nexport const componentToIcon = (component, className = \"\") => L.divIcon({\n    className: className,\n    html: ReactDOMServer.renderToString(component),\n});","import produce from \"immer\"\nimport mapValues from \"lodash/mapValues\";\nimport forEach from \"lodash/forEach\";\nimport keys from \"lodash/keys\";\n\nexport const breakpoints = {\n    xs: 320,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1600\n};\n\nconst _standardMediaqueries = mapValues(breakpoints,\n    bp => `only screen and (min-width: ${bp}px)`\n)\n\nexport const mqs = produce(_standardMediaqueries, draft => {\n    const viewports = keys(breakpoints);\n\n    forEach(viewports, (key, index) => {\n        if (index === (viewports.length - 1)) {\n            return\n        }\n\n        const mq = _standardMediaqueries[key];\n        const nextVP = viewports[index + 1];\n\n        draft[`${key}Only`] = `${mq} and (max-width: ${breakpoints[nextVP]}px)`\n    })\n\n    draft.se = `(device-height : 568px)\n    and (device-width : 320px)\n    and (-webkit-min-device-pixel-ratio: 2)`;\n\n    draft.mobileLandscape = `only screen and (min-width: ${breakpoints.xs}px)\n    and (max-width: ${breakpoints.lg - 1}px)\n    and (orientation: landscape)`;\n\n})\n\nconst mediaqueries = mapValues(mqs, mq => `@media ${mq}`);\n\nconst base = {\n    name: 'base',\n    colors: {\n        primary: 'hotpink',\n        background: '#000000',\n    },\n    sizes: {\n        navbar: {\n            height: '50px',\n        }\n    },\n    mediaqueries\n}\n\nconst light = produce(base, draft => {\n    draft.name = \"light\";\n    draft.colors.navbar = \"#e8eaf3\";\n    draft.colors.container = \"#F5F6FA\";\n    draft.colors.background = \"#FFFFFF\";\n    draft.colors.text = \"#0E0E0E\";\n});\n\nconst dark = produce(base, draft => {\n    draft.name = \"dark\";\n    draft.colors.background = '#070706';\n    draft.colors.container = \"#0E0E0E\";\n    draft.colors.navbar = \"#000000\";\n    draft.colors.text = \"#F5F6FA\";\n});\n\nexport {\n    light,\n    dark,\n    mediaqueries\n}","import React, { } from \"react\";\nimport AspectRatio from \"react-aspect-ratio\";\nimport { useWindowSize, useMedia } from \"react-use\";\nimport Unsplash from 'react-unsplash-wrapper'\nimport styled from \"@emotion/styled\";\nimport Icon from '@mdi/react'\nimport { mdiGithub, mdiLinkedin, mdiTwitter, mdiInstagram, mdiGmail, mdiMapMarker } from '@mdi/js'\nimport { Map, Marker, TileLayer } from 'react-leaflet'\nimport { useTheme } from \"emotion-theming\";\nimport { componentToIcon } from \"../utils\";\nimport { mediaqueries, mqs } from \"../theme\";\nimport Typography from 'antd/es/typography';\n\nconst { Title, Paragraph } = Typography;\n\nconst HomeWrapper = styled.div`\n    .hero {\n        position: relative;\n        margin-top: -${({ theme }) => theme.sizes.navbar.height};\n    }\n\n    .hero-ratio > div::before {\n        background: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) );\n        content: \"\";\n        height: 100%;\n        position: relative;\n        width: 100%;\n    }\n\n    .map-marker {\n        top: -2rem;\n        position: relative;\n    }\n\n    .map-ratio {\n        z-index: -1;\n    }\n\n`;\n\nconst TextWrapper = styled.div`\n    align-items: center;\n    box-sizing: border-box;\n    color: white;\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    padding: 0 1rem;\n    position: absolute;\n    text-align: center;\n    text-shadow: -3px 1px 2px rgba(0, 0, 0, 1);\n    width: 100%;\n    font-size: 4rem;\n\n    ${mediaqueries.lg} {\n        font-size: 3.5vw;\n    }\n`;\n\nconst HomeContainer = styled.div`\n    border-radius: .5rem .5rem 0 0;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-height: 300px;\n    min-height: 50vh;\n    padding: 1rem;\n    position: relative;\n\n    h4 {\n        margin-top: -.5rem;\n\n        ${mediaqueries.se} {\n            font-size: 1.3rem;\n        }\n\n        ${mediaqueries.mobileLandscape} {\n            font-size: 1.3rem;\n        }\n\n        ${mediaqueries.md} {\n            margin-top: 0;\n        }\n    }\n\n    p {\n        ${mediaqueries.se} {\n            font-size: 0.8rem;\n        }\n    }\n`;\n\nconst SocialLinks = styled.ul`\n    align-items: center;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    padding: 0;\n    position: absolute;\n\n    & > li {\n        display: inline-block;\n        margin: 0 0.5rem;\n    }\n\n    .social-icon {\n\n        path {\n            fill: white;\n            opacity: 1;\n            transition: opacity .5s;\n\n            ${props => props.theme.mediaqueries.lg} {\n                opacity: 0.5;\n            }\n        }\n\n        &:hover, &:focus {\n            path {\n                opacity: 1;\n            }\n        }\n    }\n`;\n\nconst socialLinks = [\n    {\n        name: 'GitHub',\n        url: \"https://github.com/xantiagoma\",\n        icon: mdiGithub,\n    },\n    {\n        name: 'LinkedIn',\n        url: \"https://www.linkedin.com/in/xantiagoma\",\n        icon: mdiLinkedin,\n    },\n    {\n        name: 'Twitter',\n        url: \"https://twitter.com/xantiagoma\",\n        icon: mdiTwitter,\n    },\n    {\n        name: 'Instagram',\n        url: \"https://www.instagram.com/xantiagoma\",\n        icon: mdiInstagram,\n    },\n    {\n        name: 'Gmail',\n        url: \"mailto:xantiagoma@gmail.com\",\n        icon: mdiGmail,\n    },\n];\n\nconst Mapa = ({ width, height }) => {\n    const position = [6.244747, -75.574828];\n    const { name: theme } = useTheme();\n    const lightLayer = \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\";\n    const darkLayer = \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\";\n\n    const icon = <Icon path={mdiMapMarker}\n        className=\"map-marker\"\n        title=\"Medellín\"\n        size=\"25px\"\n        color={theme === 'light' ? 'black' : 'white'}\n    />;\n\n    const isMobileAndLandscape = useMedia(mqs.mobileLandscape);\n\n    return (\n        <AspectRatio\n            ratio={width / (height / (isMobileAndLandscape ? 1 : 2))}\n            style={{\n                maxWidth: `${width}px`,\n            }}\n            className=\"map-ratio\"\n        >\n            <Map\n                attributionControl={false}\n                center={position}\n                doubleClickZoom={false}\n                dragging={false}\n                keyboard={false}\n                scrollWheelZoom={false}\n                tap={false}\n                touchZoom={false}\n                zoom={13}\n                zoomControl={false}\n            >\n                <TileLayer\n                    url={theme === 'light' ? lightLayer : darkLayer}\n                />\n                <Marker position={position} icon={componentToIcon(icon)} />\n            </Map>\n        </AspectRatio>\n    );\n}\n\n\nconst Home = () => {\n    const { width, height } = useWindowSize();\n\n    return (<HomeWrapper>\n        <div className=\"hero\">\n            <AspectRatio\n                ratio={width / height}\n                style={{\n                    maxWidth: `${width}px`,\n                }}\n                className=\"hero-ratio\"\n            >\n                <Unsplash photoId=\"gy08FXeM2L4\" expand>\n                    <TextWrapper className=\"text-h1\">Santiago Montoya Angarita</TextWrapper>\n                    <SocialLinks>\n                        {socialLinks.map(({ name, url, icon }) =>\n                            <li key={name}>\n                                <a href={url} target=\"_black\" className=\"social-icon\">\n                                    <Icon path={icon}\n                                        title={name}\n                                        size=\"25px\"\n                                        color=\"\"\n                                    />\n                                </a>\n                            </li>\n                        )}\n                    </SocialLinks>\n                </Unsplash>\n            </AspectRatio>\n        </div>\n        <HomeContainer className=\"container\">\n            <Title level={1}>About me</Title>\n            <Paragraph>\n                I'm a Web Developer from Medellín, Colombia.<br /><br />\n\n                    Last years I’ve been working in projects using Vue.js, React, and Angular (2+) , I'm also familiar with other JavaScript frameworks and plain vanilla.<br /><br />\n\n                    As well I enjoy doing back-end development in Node.js, Go, Kotlin and Python and I know some PHP, Java, C++, C#, Bash, Dart/Flutter for intermediate programs.<br /><br />\n\n                    I've been working in web development for the last 5 years., I'm a big fan of programming in general.\n                </Paragraph>\n        </HomeContainer>\n        <Mapa width={width} height={height} />\n    </HomeWrapper>);\n}\n\nexport default Home;\n","import React from 'react';\nimport { useTheme } from 'emotion-theming';\nimport { css, Global } from '@emotion/core';\n\n\n\n\nconst globalStyles = props => css`\n  body {\n    background: ${props.theme.colors.background};\n    color:  ${props.theme.colors.text};\n  }\n\n  h1, h2, h3, h4, h5, h6, p, small, .ant-typography,\n  h1.ant-typography, .ant-typography h1,\n  h2.ant-typography, .ant-typography h2,\n  h3.ant-typography, .ant-typography h3\n  h4.ant-typography, .ant-typography h4\n  h5.ant-typography, .ant-typography h5\n  h6.ant-typography, .ant-typography h6,\n  p.ant-typography, .ant-typography p,\n  small.ant-typography, .ant-typography small {\n    color:  ${props.theme.colors.text};\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst GlobalStyles = () => {\n  const theme = useTheme();\n  return <Global styles={globalStyles({ theme })} />;\n}\n\nexport default GlobalStyles;","import { createContext } from \"react\";\n\nconst ThemeContext = createContext({\n    theme: 'system',\n    setTheme: () => { },\n});\n\nexport default ThemeContext;","import { useState, useEffect } from 'react';\nimport { useWindowSize, useOrientation } from \"react-use\";\n\n\nexport function useDarkModeEnable() {\n    const [state, stateSet] = useState([false]);\n\n    const handler = () => {\n        if (window.matchMedia) {\n            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                return [true, 'dark'];\n            } else {\n                return [true, 'light'];\n            }\n        } else {\n            return [false];\n        }\n    }\n\n    useEffect(() => {\n        stateSet(handler());\n        window.matchMedia &&\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener &&\n            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => stateSet(handler()));\n    }, []);\n\n    return state;\n}\n\n\nexport function useScreenOrientation() {\n    const { type: orientation } = useOrientation();\n    const { width, height } = useWindowSize();\n    const orientationSupported = !!window.screen.orientation;\n    const calcOrientation = width > height ? 'landscape' : 'portrait';\n    return orientationSupported ? orientation : calcOrientation;\n}","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\nimport Sticky from 'react-stickynode';\nimport { ThemeContext } from \"../context\";\nimport { useDarkModeEnable } from '../hooks';\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport c from \"classnames\";\nimport Icon from '@mdi/react'\nimport { mdiBrightnessAuto as mdiAuto, mdiBrightness5 as mdiLight, mdiBrightness7 as mdiDark } from '@mdi/js'\n\n\nconst NavigationWrapper = styled.nav`\n    display: flex;\n    background: ${({ theme }) => theme.colors.navbar};\n    height: ${({ theme }) => theme.sizes.navbar.height};\n    transition: color 1s, background 1s;\n    font-size: 16px;\n\n    &.hide-top {\n        background: transparent;\n        color: white;\n\n        .active & {\n            background: ${({ theme }) => theme.colors.navbar};\n            color: inherit;\n        }\n    }\n\n    .title {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 0 1rem;\n    }\n\n    h1 {\n        margin: 0\n    }\n\n    .urls {\n        align-items: center;\n        display: flex;\n        justify-content: center;\n        margin-right: auto;\n        padding: 0;\n\n        li {\n        display: inline-block;\n            a {\n                margin-right: 1rem;\n            }\n        }\n    }\n\n    .theme-switcher {\n        display: flex;\n        align-items: center;\n    }\n`;\n\nconst mapThemeKeyToIcon = {\n    'system': mdiAuto,\n    'light': mdiLight,\n    'dark': mdiDark\n}\n\nconst mapThemeKeyToText = {\n    'system': 'Auto',\n    'light': 'Light',\n    'dark': 'Dark'\n}\n\nconst ThemeButtonWrapper = styled.button`\n    margin: 0 0.5rem;\n    padding: 0;\n    background: transparent;\n    border: none;\n    outline: none;\n\n    .icon {\n        & > path {\n            fill: ${({ theme }) => theme.colors.text};\n        }\n\n        .hide-top & > path {\n            fill: white;\n        }\n\n        .active .hide-top & > path  {\n            fill: ${({ theme }) => theme.colors.text};\n        }\n\n        & > path {\n            opacity: 0.5;\n            transition: opacity .5s, fill .5s;\n        }\n        &.active > path {\n            opacity: 1;\n        }\n    }\n\n\n`;\n\nconst Navigation = () => {\n    const { theme, setTheme } = useContext(ThemeContext);\n    const [enabled] = useDarkModeEnable();\n    const isHome = useRouteMatch({\n        path: '/',\n        exact: true,\n    });\n\n    return <Sticky enabled={true} top={0} bottomBoundary={1200} innerZ={1}>\n        <NavigationWrapper className={c({ 'hide-top': !!isHome })}>\n            <div className=\"title\">\n                <Link to=\"/\">xantiagoma</Link>\n            </div>\n            <ul className=\"urls\">\n                {/* <li><Link to=\"/blog\">Blog</Link></li> */}\n            </ul>\n            <div className=\"theme-switcher\">\n                {\n                    [\n                        'light',\n                        enabled && 'system',\n                        'dark',\n                    ].filter(e => e).map(themeKey =>\n                        <ThemeButtonWrapper key={themeKey} onClick={() => setTheme(themeKey)}>\n                            <Icon path={mapThemeKeyToIcon[themeKey]}\n                                title={mapThemeKeyToText[themeKey]}\n                                size=\"25px\"\n                                className={c('icon', { 'active': theme === themeKey })}\n                                color=\"\"\n                            />\n                        </ThemeButtonWrapper>\n\n                    )\n                }\n            </div>\n        </NavigationWrapper>\n    </Sticky>;\n}\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { Blog, Home } from \"./pages\";\nimport { GlobalStyles, Navigation } from \"./components\";\nimport { useLocalStorage } from \"react-use\";\nimport { ThemeProvider } from 'emotion-theming';\nimport { ThemeContext } from \"./context\";\nimport * as themes from './theme';\nimport { useDarkModeEnable } from './hooks';\n\nconst getTheme = theme => themes[theme] || themes.light;\n\nconst App = () => {\n  const [themeKey, themeKeySet] = useLocalStorage('theme', 'system');\n  const [enabled, systemTheme] = useDarkModeEnable();\n  const theme = (themeKey === \"system\") ?\n    (\n      enabled ? getTheme(systemTheme) : getTheme('light')\n    )\n    : getTheme(themeKey);\n\n  return (\n    <ThemeContext.Provider value={{ theme: themeKey, setTheme: themeKeySet }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        <Router>\n          <Navigation />\n          <Route component={Home} path=\"/\" exact />\n          <Route component={Blog} path=\"/blog\" />\n        </Router>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}